services:
  backend:
    # TODO add healthcheck and autoheal
    restart: always
    environment:
      _UVICORN_HOST: "0.0.0.0"
      _UVICORN_PORT: 8000
      _REDIS_HOST: "redis"
      _PG_HOST: "postgres"
    build:
      context: backend
      dockerfile: Dockerfile
    link:
      - redis
      - postgres
    volumes:
      - "./backend/.env:/app/.env"
      - "./volumes/backend:/app/data"
    deploy:
      resources:
        limits:
          cpus: '3.00'
          memory: 3000M

  frontend:
    restart: always
    build:
      context: frontend
      dockerfile: Dockerfile
    link:
      - backend
    deploy:
      resources:
        limits:
          cpus: '3.00'
          memory: 3000M

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    links:
      - frontend
      - backend
    volumes:
      - ./volumes/nginx/ssl_nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /data/letsencrypt:/data/letsencrypt

  redis:
    image: redis:7.2.3-bookworm
    restart: always
    labels:
      - "autoheal=true"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./volumes/redis/:/data
    ports:
      # TODO remove in production
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2m
      timeout: 20s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1000M

  postgres:
    image: ankane/pgvector:v0.3.1
    environment:
      POSTGRES_DB: db_main
      POSTGRES_USER: db_main
      POSTGRES_PASSWORD: db_main
      PGUSER: db_main
      PGPASSWORD: db_main
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      # TODO remove in production
      - "5432:5432"
    labels:
      - "autoheal=true"
    restart: unless-stopped
    volumes:
      - ./extra/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./volumes/pg/:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 4000M

  autoheal:
    restart: always
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
